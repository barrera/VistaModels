//--------------------------------------------------
//  
//      SystemC code generated by Visual Elite
//
//  Design Unit:
//  ------------
//      Unit    Name  :  recursiveDFG_sc
//      Library Name  :  local
//  
//      Creation Date :  Mon Jul 19 09:38:29 2010
//      Version       :  2010.01 v4.2.0 build 11. Date: Feb 16 2010. License: 2010.2
//  
//  Options Used:
//  -------------
//      Target
//         Language   :  As Is
//         Purpose    :  Simulation
//  
//      Style
//         Code Destination               :  1 File per Unit
//         Attach Packages                :  No
//         Preserve spacing for free text :  Yes
//         Declaration alignment          :  No
//
//--------------------------------------------------
//--------------------------------------------------
//  
//  Library Name :  local
//  Unit    Name :  recursiveDFG_sc
//  
//----------------------------------------------------
#ifndef _RECURSIVEDFG_SH_H_
#define _RECURSIVEDFG_SH_H_

#include "systemc.h"
#include "custom_if.h"
#include "ac_fixed.h"
using namespace std;

class recursiveDFG_sc: public custom_if<ac_fixed<32,16,true> >, sc_module {
public:
  sc_port<custom_if<ac_fixed<32,16,true> > > p;

  recursiveDFG_sc(sc_module_name name) :
    sc_module(name)
  { }

  void send(ac_fixed<32,16,true>  *data) {
      X = *data;
      Z = a(X) + b(Y);
      Y = Z;

      p->send(&Z);
  }

  const sc_event& default_event() const { return ev; }

private:
  sc_event ev;

  ac_fixed<32,16,true>  X, Y, Z;

  ac_fixed<32,16,true>  a(ac_fixed<32,16,true>  d) {
    return ((ac_fixed<32,16,true> )5 * d); }

  ac_fixed<32,16,true>  b(ac_fixed<32,16,true>  d) {
    return ((ac_fixed<32,16,true> )19 * d); }
};

#endif

