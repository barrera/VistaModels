
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2011     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for PassMM.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 1.7.0.beta2
//* Generated on: Mar. 07, 2010 04:55:02 AM, (user: jon)
//* Automatically merged on: Jul. 02, 2010 02:43:32 PM, (user: jon)
//* Automatically merged on: Feb. 03, 2011 04:11:52 PM, (user: jon)
//* Automatically merged on: Sep. 26, 2011 07:41:20 AM, (user: jon)
//* Automatically merged on: Jan. 09, 2012 02:04:30 PM, (user: jon)
//* Automatically merged on: Jan. 20, 2012 09:12:44 AM, (user: jon)
//*>

#include "PassMM_pv.h"
#include <iostream>
#include "datastruct.h"

using namespace sc_core;
using namespace sc_dt;
using namespace std;

//constructor
PassMM_pv::PassMM_pv(sc_module_name module_name) 
  : PassMM_pv_base(module_name) {
  PowerFactor = 100;
  PowerTime = 5;
  SC_THREAD(thread);
}   


void PassMM_pv::thread() {
  unsigned int d;
  datastruct ds;
  for (;;) {
    PowerFactor = 80 + rand()%40; 
    PowerTime = rand()%10;
    d_in_read(0x0, (unsigned char *) &ds, sizeof(datastruct));
    ds.d += 1;
    d_out_write(0x0, (unsigned char *) &ds, sizeof(datastruct));
  }
}
