
/**************************************************************/
/*                                                            */
/*      Copyright Mentor Graphics Corporation 2006 - 2012     */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF MENTOR        */
/*         GRAPHICS CORPORATION OR ITS LICENSORS AND IS       */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for drive_io.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 3.1.2
//* Generated on: Dec. 15, 2011 02:59:04 PM, (user: jon)
//* Automatically merged on: Mar. 30, 2012 09:19:55 AM, (user: jon)
//*>


#include "drive_io_pv.h"
#include <iostream>

using namespace sc_core;
using namespace sc_dt;
using namespace std;

//constructor
drive_io_pv::drive_io_pv(sc_module_name module_name) 
  : drive_io_pv_base(module_name) {
}    

// Read callback for t port.
// Returns true when successful.
bool drive_io_pv::t_callback_read(mb_address_type address, unsigned char* data, unsigned size) {
  
  return true;
}


// Write callback for t port.
// Returns true when successful.
bool drive_io_pv::t_callback_write(mb_address_type address, unsigned char* data, unsigned size) {
  unsigned char d[] = "0123456789abcdef";
  unsigned char r[16];

  x_write(0x0, d, 16);
  x_read(0x0, r, 16);
  
  return true;
}


unsigned drive_io_pv::t_callback_read_dbg(mb_address_type address, unsigned char* data, unsigned size) {
  return 0;
}

unsigned drive_io_pv::t_callback_write_dbg(mb_address_type address, unsigned char* data, unsigned size) {
  return 0;
}

bool drive_io_pv::t_get_direct_memory_ptr(mb_address_type address, tlm::tlm_dmi& dmiData) {
  return false;
}


